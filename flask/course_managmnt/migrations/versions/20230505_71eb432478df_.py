"""empty message

Revision ID: 71eb432478df
Revises: 
Create Date: 2023-05-05 16:16:19.798500

"""
from alembic import op
import sqlalchemy as sa

# pylint: disable=E1101

# revision identifiers, used by Alembic.
revision = '71eb432478df'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('students_departments')
    op.drop_table('vegan')
    op.drop_table('students')
    op.drop_table('departments')
    op.drop_table('courses')
    op.drop_table('faculties')
    op.drop_table('professors')
    op.drop_constraint('students_accounts_student_id_key', 'students_accounts', type_='unique')
    op.drop_constraint('fk_students_accounts_students', 'students_accounts', type_='foreignkey')
    op.drop_column('students_accounts', 'student_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('students_accounts', sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('fk_students_accounts_students', 'students_accounts', 'students', ['student_id'], ['id'])
    op.create_unique_constraint('students_accounts_student_id_key', 'students_accounts', ['student_id'])
    op.create_table('professors',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('professors_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='professors_pkey'),
    sa.UniqueConstraint('first_name', name='professors_first_name_key'),
    sa.UniqueConstraint('last_name', name='professors_last_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('faculties',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('faculties_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('building', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='faculties_pkey'),
    sa.UniqueConstraint('building', name='faculties_building_key'),
    sa.UniqueConstraint('name', name='faculties_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('courses',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('courses_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('semester', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='courses_pkey'),
    sa.UniqueConstraint('title', name='courses_title_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('departments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('departments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('building', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('capacity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('faculty_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('professor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name='fk_departments_courses'),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculties.id'], name='fk_departments_faculties'),
    sa.ForeignKeyConstraint(['professor_id'], ['professors.id'], name='fk_departments_professors'),
    sa.PrimaryKeyConstraint('id', name='departments_pkey'),
    sa.UniqueConstraint('building', name='departments_building_key'),
    sa.UniqueConstraint('faculty_id', name='departments_faculty_id_key'),
    sa.UniqueConstraint('name', name='departments_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('students',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('students_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='students_pkey'),
    sa.UniqueConstraint('first_name', name='students_first_name_key'),
    sa.UniqueConstraint('last_name', name='students_last_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('vegan',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('color', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='vegan_pkey')
    )
    op.create_table('students_departments',
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('department_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='fk_students_departments_departments'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name='fk_students_departments_students'),
    sa.PrimaryKeyConstraint('student_id', 'department_id', name='students_departments_pkey')
    )
    # ### end Alembic commands ###
